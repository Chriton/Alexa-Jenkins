Response:

yHeaderExclusiveList: [] },
     _rp_resolve: [Function],
     _rp_reject: [Function],
     _rp_promise:
      Promise {
        _bitField: 33554433,
        _fulfillmentHandler0: [Function],
        _rejectionHandler0: [Circular],
        _promise0: undefined,
        _receiver0: undefined,
        _onCancelField: [Function],
        _branchesRemainingToCancel: 1 },
     _rp_callbackOrig: undefined,
     callback: [Function],
     _rp_options:
      { method: 'POST',
        uri: 'http://79.115.45.174:8080/job/Smoke_test/build',
        resolveWithFullResponse: true,
        callback: [Function: RP$callback],
        transform: undefined,
        simple: true,
        transform2xxOnly: false },
     headers: { 'content-length': 0 },
     setHeader: [Function],
     hasHeader: [Function],
     getHeader: [Function],
     removeHeader: [Function],
     localAddress: undefined,
     pool: {},
     dests: [],
     __isRequestRequest: true,
     _callback: [Function: RP$callback],
     proxy: null,
     tunnel: false,
     setHost: true,
     originalCookieHeader: undefined,
     _disableCookies: true,
     _jar: undefined,
     port: '8080',
     host: '79.115.45.174',
     path: '/job/Smoke_test/build',
     httpModule:
      { IncomingMessage: [Object],
        METHODS: [Object],
        OutgoingMessage: [Object],
        ServerResponse: [Object],
        STATUS_CODES: [Object],
        Agent: [Object],
        globalAgent: [Object],
        ClientRequest: [Object],
        request: [Function],
        get: [Function],
        _connectionListener: [Function: connectionListener],
        Server: [Object],
        createServer: [Function],
        Client: [Function: deprecated],
        createClient: [Function: deprecated] },
     agentClass: { [Function: Agent] super_: [Object], defaultMaxSockets: Infinity },
     agent:
      Agent {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     _started: true,
     href: 'http://79.115.45.174:8080/job/Smoke_test/build',
     req:
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedHeader: [Object],
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'POST /job/Smoke_test/build HTTP/1.1\r
host: 79.115.45.174:8080\r
content-length: 0\r
Connection: close\r
\r
',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'POST',
        path: '/job/Smoke_test/build',
        parser: null,
        res: [Circular] },
     ntick: true,
     response: [Circular],
     originalHost: '79.115.45.174:8080',
     originalHostHeaderName: 'host',
     responseContent: [Circular],
     _ended: true,
     _callbackCalled: true },
  toJSON: [Function: responseToJSON],
  caseless:
   Caseless {
     dict:
      { date: 'Sun, 23 Apr 2017 18:43:22 GMT',
        'x-content-type-options': 'nosniff',
        location: 'http://79.115.45.174:8080/queue/item/73/',
        connection: 'close',
        server: 'Jetty(9.2.z-SNAPSHOT)' } },
  read: [Function],
  body: '' }